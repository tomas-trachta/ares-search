// <auto-generated />
using System;
using AresSearchAPI.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AresSearchAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240306001714_Initial_migration")]
    partial class Initial_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AresSearchAPI.Model.CompanyInformationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "obchodniJmeno");

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ico");

                    b.Property<string>("CreationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "datumVzniku");

                    b.Property<int?>("HeadquartersId")
                        .HasColumnType("int");

                    b.Property<int?>("MailingAddressId")
                        .HasColumnType("int");

                    b.Property<string>("VatId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dic");

                    b.HasKey("Id");

                    b.HasIndex("HeadquartersId");

                    b.HasIndex("MailingAddressId");

                    b.ToTable("CompanyInformation");
                });

            modelBuilder.Entity("AresSearchAPI.Model.HeadquartersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressLocationCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "kodAdresnihoMista");

                    b.Property<int>("CityDistrictCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "kodMestskehoObvodu");

                    b.Property<string>("CityDistrictName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nazevMestskehoObvodu");

                    b.Property<int>("CityDistrictPartCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "kodMestskeCastiObvodu");

                    b.Property<string>("CityDistrictPartName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nazevMestskeCastiObvodu");

                    b.Property<int>("DistrictCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "kodOkresu");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "cisloDomovni");

                    b.Property<int>("ReferenceNumber")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "cisloOrientacni");

                    b.Property<int>("RegionCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "kodKraje");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nazevKraje");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "kodStatu");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nazevStatu");

                    b.Property<int>("StreetCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "kodUlice");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nazevUlice");

                    b.Property<string>("TextAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "textovaAdresa");

                    b.Property<int>("TownCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "kodObce");

                    b.Property<string>("TownName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nazevObce");

                    b.Property<int>("TownPartCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "kodCastiObce");

                    b.Property<string>("TownPartName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nazevCastiObce");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "psc");

                    b.HasKey("Id");

                    b.ToTable("HeadquartersModel");

                    b.HasAnnotation("Relational:JsonPropertyName", "sidlo");
                });

            modelBuilder.Entity("AresSearchAPI.Model.MailingAddressModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "radekAdresy1");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "radekAdresy2");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "radekAdresy3");

                    b.HasKey("Id");

                    b.ToTable("MailingAddressModel");

                    b.HasAnnotation("Relational:JsonPropertyName", "adresaDorucovaci");
                });

            modelBuilder.Entity("AresSearchAPI.Model.CompanyInformationModel", b =>
                {
                    b.HasOne("AresSearchAPI.Model.HeadquartersModel", "Headquarters")
                        .WithMany()
                        .HasForeignKey("HeadquartersId");

                    b.HasOne("AresSearchAPI.Model.MailingAddressModel", "MailingAddress")
                        .WithMany()
                        .HasForeignKey("MailingAddressId");

                    b.Navigation("Headquarters");

                    b.Navigation("MailingAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
